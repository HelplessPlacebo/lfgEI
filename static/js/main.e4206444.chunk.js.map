{"version":3,"sources":["Components/Content/AboutMe/AMS.module.css","Components/Tiles/st.module.css","Components/Header/HS.module.css","Components/Header/Header.tsx","Components/Content/AboutMe/AboutMe.tsx","Components/Tiles/Tile.tsx","Components/Tiles/TilesGameOverMenu.tsx","Components/Tiles/GameDescription.tsx","Components/Tiles/TIles.tsx","data/TilesReducer.ts","Components/Tiles/TilesContainer.tsx","Components/Slider/SliderCaption.tsx","Components/Slider/Slider.tsx","data/LoadingReducer.ts","Components/Content/Home/HomePageContainer.tsx","Components/Content/Content.tsx","App.tsx","serviceWorker.ts","data/redux-store.ts","index.js","utils/imgs/react_logo.png","utils/imgs/team.jpg","utils/imgs/devskills.jpg","utils/imgs/contacts.png","utils/imgs/card_back_side.jpg","utils/imgs/angular.png","utils/imgs/bg1.jpg","utils/imgs/bg2.jpg","utils/imgs/bg3.jpg","utils/imgs/bg4.jpg","utils/imgs/bg5.jpg"],"names":["module","exports","Header","props","expand","dark","bg","mb","Brand","href","src","logo","width","height","className","alt","Toggler","target","navbar","id","Nav","mr","ItemLink","HS","item","active","to","AboutMe","AMS","header","aboutMeText","ButtonsPose","justifyContent","col","Button","success","as","aria-expanded","aria-controls","CollapsePose","Fragment","Deck","Image","TeamImg","Body","Title","Card1Header","Text","CardText","DevImg","Card2Header","ContactsImg","Tile","TW","TilesWrapper","ClickedTiles","indexOf","CurrentID","Card","CurrentColor","RedCard","GreenCard","undefined","onClick","length","SetClickedTiles","CardBackSide","CardBacKSide","rowStyle","marginTop","GoHome","TilesGameOverMenu","GameOverText","display","text","style","GameReset","info","App","window","setTimeout","Bootstrap","popover","lg","warning","title","content","Component","Tiles","ObjsToCompare","splice","map","el","TilesData","tile","push","color","DeleteTile","ResetTiles","InfoPopper","key","DefaultState","TilesReducer","state","action","type","IsClicked","CurrentTileId","filter","TileID","TilesContainer","this","React","connect","SliderCaption","Caption","shadow","textColor","captionTitle","caption","Slider","carousel","SetHPIsLoading","SliderStyle","HPIsLoading","mt","Bar","striped","animated","min","max","now","w","fade","Inner","Item","Forest2","Forest1","Forest3","Forest4","Forest5","Prev","Icon","Next","LoadingReducer","HomePageContainer","LoadingData","Content","CS","bgFon","exact","path","render","component","Boolean","location","hostname","match","reducers","combineReducers","store","createStore","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e4206444.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AMS_header__qJ-q5\",\"aboutMeText\":\"AMS_aboutMeText__1W5By\",\"ButtonsPose\":\"AMS_ButtonsPose__8vUre\",\"CollapsePose\":\"AMS_CollapsePose__HAe12\",\"ContactsWr\":\"AMS_ContactsWr__2Gx4j\",\"Card1Header\":\"AMS_Card1Header__3R1LA\",\"Card2Header\":\"AMS_Card2Header__8a-7U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TilesWrapper\":\"st_TilesWrapper__2fZFg\",\"Card\":\"st_Card__36cnV\",\"CardBackSide\":\"st_CardBackSide__3nmyU\",\"GameOverText\":\"st_GameOverText__3cJwd\",\"GameOverButtonsPose\":\"st_GameOverButtonsPose__2yUT8\",\"InfoPopper\":\"st_InfoPopper__1fZk3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ww\":\"HS_ww__fancB\",\"item\":\"HS_item__2wyPs\"};","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport logo from \"../../utils/imgs/react_logo.png\"\r\nimport HS from \"./HS.module.css\"\r\n//@ts-ignore\r\nimport {Navbar, Nav, Collapse} from 'bootstrap-4-react';\r\n\r\ntype THeaderProps ={\r\n\r\n}\r\nconst Header : React.FC<THeaderProps> = (props) => {\r\n    return (\r\n        <Navbar expand=\"lg\" dark bg=\"dark\" mb=\"0\">\r\n            <Navbar.Brand href=\"#\">\r\n                <img src={logo} width=\"60\" height=\"40\" className=\"d-inline-block align-top\" alt=\"logo\"/>\r\n            </Navbar.Brand>\r\n            <Navbar.Toggler target=\"#navbarColor1\"/>\r\n            <Collapse navbar id=\"navbarColor1\">\r\n                <Navbar.Nav mr=\"auto\">\r\n                    <Nav.ItemLink >\r\n                        <div className={`${HS.item} ${HS.active}`}>\r\n                            <NavLink to=\"/Home/\">\r\n                                Home\r\n                            </NavLink>\r\n                        </div>\r\n                    </Nav.ItemLink>\r\n                    <Nav.ItemLink >\r\n                        <div className={`${HS.item} ${HS.active}`}>\r\n                            <NavLink to=\"/AboutMe/\">\r\n                                About me\r\n                            </NavLink>\r\n                        </div>\r\n                    </Nav.ItemLink>\r\n                    <Nav.ItemLink >\r\n                        <div className={`${HS.item} ${HS.active}`}>\r\n                            <NavLink to=\"/game/\">\r\n                                Bored?\r\n                            </NavLink>\r\n                        </div>\r\n                    </Nav.ItemLink>\r\n                </Navbar.Nav>\r\n            </Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default Header","import React from \"react\";\nimport AMS from \"./AMS.module.css\"\n//@ts-ignore\nimport {Card, Collapse, Container, Row, Col,} from 'bootstrap-4-react'\nimport TeamImg from \"../../../utils/imgs/team.jpg\"\nimport DevImg from \"../../../utils/imgs/devskills.jpg\"\nimport ContactsImg from \"../../../utils/imgs/contacts.png\"\n\ntype TAboutMeProps = {}\nconst AboutMe: React.FC<TAboutMeProps> = (props) => {\n    return (<div>\n            <div className={AMS.header}>\n                <h1>\n                    About me\n                </h1>\n            </div>\n\n            <Container>\n                <div className={AMS.aboutMeText}>\n                    Hi, my name is Vlad, I’m 22 years old,\n                    My goal is to start a career in it company and for +- 5 years to grow to the position of team-lead.\n                    More than a year studying frontend\n                    development, has implemented several\n                    educational projects, one of which is presented above.\n                    Mainly javascript (there is an understanding of the context,\n                    prototypes, and so on) for web development - react + redux + typescript ,\n                    just not a lot of Python (django), as is the understanding of bundles of html\n                    + javascript + css(sass/less) + the collector, such webpack (various plug-ins,\n                    the type of the html-webpack-plugin, clean-webpack-plugin, how to work with\n                    lowder how to connect the styles to change the size of the chunks and so on). There is little\n                    experience with backend, writing a private rest API to the server on node.js (express) - http\n                    requests with simple responses, the type of filter array, adding data to the server, deleting from\n                    the server and receiving data on the client, as the database used MongoDB. Have an idea for a mobile\n                    application (react native)\n                </div>\n            </Container>\n\n\n            <Container className={AMS.ButtonsPose}>\n                <Row justifyContent=\"md-center\">\n                    <Col col=\"col lg-2\"> </Col>\n                    <Col col=\"col md-auto\">\n                        <Collapse.Button success as=\"a\" target=\"#ShowMoreInfo\" aria-expanded=\"false\"\n                                         aria-controls=\"CollapseShowMoreInfo\">\n                            Show more info\n                        </Collapse.Button>\n                    </Col>\n                    <Col col=\"col lg-2\"> </Col>\n                </Row>\n            </Container>\n\n            <Collapse className={AMS.CollapsePose} id=\"ShowMoreInfo\">\n                <React.Fragment>\n                    <Card.Deck mb=\"3\">\n                        <Card>\n                            <Card.Image\n                                src={TeamImg}\n                                alt=\"img card\"\n                            />\n                            <Card.Body>\n                                <Card.Title className={AMS.Card1Header}>\n                                    My dream job\n                                </Card.Title>\n                                <Card.Text className={AMS.CardText}>\n                                    despite the fact that I do not have much experience in\n                                    web development - I think that I am ready to take part in\n                                    the development of real projects in a team where other\n                                    front-end developers will work, so that if you have\n                                    questions I can always turn to them for help and advice.\n                                    I would be happy to participate in the development with outgoing,\n                                    positive, creative and responsive people.\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n\n                        <Card>\n                            <Card.Image\n                                src={DevImg}\n                                alt=\"img card\"\n                            />\n                            <Card.Body>\n                                <Card.Title className={AMS.Card2Header}>\n                                    My development experience\n                                </Card.Title>\n                                <Card.Text className={AMS.CardText}>\n                                    I participated in the development of several projects including this project.\n                                    The first project was a social network, it was a education project in which I\n                                    developed the entire UI part,\n                                    business level, layout and DAL level (work with the server API). For development, I\n                                    used the following technology stack:\n                                    1) React for interface development\n                                    2) React-Redux library for state management\n                                    3) used axios library to work with the server API\n                                    4) for layout I used my custom styles and material-ui library\n                                    5) deploy the project on Github\n                                    6) rewriting the project on TypeScript.\n                                    source code of this project: https://github.com/HelplessPlacebo/my_proj\n                                    I also participated in the development of another project, but unfortunately there\n                                    were no sources left for it.\n                                    I developed this project on the stack: react + react-redux, used the\n                                    react-router-dom library for routing, and bootstrap-4-react was used for layout. The\n                                    source code for this project can be found\n                                    <a href=\"https://github.com/HelplessPlacebo/lfjEI\"> &nbsp; &nbsp;here</a>\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                        <Card>\n\n                            <Card.Image\n                                src={ContactsImg}\n                                alt=\"img card\"\n                            />\n                            <Card.Body>\n                                <Card.Title>\n                                    My contacts\n                                </Card.Title>\n                                <Card.Text className={AMS.CardText}>\n\n                                    <p>\n                                        You can find me in :\n                                    </p>\n                                    <p>\n                                        <a href=\"https:/vk.com/exynoir\">\n                                            vk.com\n                                        </a>\n                                    </p>\n\n                                    <p>\n                                        mail : xndqhacj@ynadex.ru\n                                    </p>\n\n                                    <p>\n                                        telegram : @ExyNoir\n                                    </p>\n\n                                    <p>\n                                        <a href=\"https://github.com/HelplessPlacebo\">\n                                            Github\n                                        </a>\n                                    </p>\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </Card.Deck>\n                </React.Fragment>\n            </Collapse>\n        </div>\n    )\n}\n\nexport default AboutMe","import React from \"react\";\r\nimport CardBacKSide from \"../../utils/imgs/card_back_side.jpg\"\r\nimport RedCard from \"../../utils/imgs/react_logo.png\"\r\nimport GreenCard from \"../../utils/imgs/angular.png\"\r\n\r\nimport TW from \"./st.module.css\"\r\nimport { TSetClickedTiles} from \"./TilesContainer\";\r\n\r\n\r\ntype TTileProps = {\r\n    CurrentColor : string\r\n    CurrentID : number\r\n    SetClickedTiles : TSetClickedTiles\r\n    ClickedTiles : Array<number>\r\n}\r\nconst Tile : React.FC<TTileProps> = (props ) => {\r\n\r\n\r\n    const onCardClick =() =>{\r\n        props.SetClickedTiles(props.CurrentID,true)\r\n    }\r\n\r\n\r\n    return  <div>\r\n        <div className={TW.TilesWrapper}>\r\n            {\r\n                props.ClickedTiles.indexOf(props.CurrentID) !== -1\r\n                    ?\r\n                    <img  className={TW.Card} src={\r\n                        props.CurrentColor === \"red\" ?\r\n                            RedCard\r\n                            : props.CurrentColor === \"green\" ?\r\n                            GreenCard\r\n                            : undefined\r\n                    } alt=\"\"/>\r\n                : <img  onClick={props.ClickedTiles.length < 2 ? onCardClick : undefined} className={TW.CardBackSide} src={CardBacKSide} alt=\"\"/>\r\n            }\r\n\r\n        </div>\r\n    </div>\r\n\r\n}\r\nexport default Tile","import React from \"react\";\r\nimport TW from \"./st.module.css\"\r\n//@ts-ignore\r\nimport {  Container,Display4, Button, Row, Col } from 'bootstrap-4-react';\r\nimport {Redirect, Route} from \"react-router-dom\";\r\nimport {TGameReset} from \"./TilesContainer\";\r\nconst rowStyle = {\r\n    marginTop: '5%',\r\n    justifyContent : 'center'\r\n};\r\nconst GoHome = () => {\r\n   return <Redirect to={\"Home/\"}/>\r\n}\r\ntype TTilesGameOverMenuProps = {\r\n    GameReset : TGameReset\r\n}\r\nconst TilesGameOverMenu : React.FC<TTilesGameOverMenuProps> = (props) =>{\r\n    return <Container>\r\n            <Row    justifyContent=\"center\" className={TW.GameOverText}>\r\n                <Display4 display=\"flex\"\r\n                          text=\"white\">\r\n                    Congratulations you won!!!\r\n                </Display4>\r\n            </Row>\r\n                <Row style={rowStyle}  justifyContent=\"center\" >\r\n                        <Button onClick={props.GameReset} success >Try again ?</Button>\r\n                        <Button onClick={GoHome} className=\"ml-5\" info as=\"a\" href=\"#\">Go home</Button>\r\n                </Row>\r\n\r\n        </Container>\r\n}\r\nexport default TilesGameOverMenu","import React, { Component } from 'react';\r\n//@ts-ignore\r\nimport Bootstrap, { Button } from 'bootstrap-4-react';\r\n\r\ntype TGameDescriptionProps ={\r\n\r\n}\r\n\r\nexport default class App extends Component<TGameDescriptionProps> {\r\n\r\n    componentWillMount() {\r\n        window.setTimeout(() => Bootstrap.popover('#popoverExample'), 2000);\r\n    }\r\n\r\n    render() {\r\n        const popover = {\r\n            title: `It's so easy !` ,\r\n            content: 'you just need to click on the cards as soon as you choose 2 identical cards - ' +\r\n                'they will be searched, you will win when you guess all the cards'\r\n        }\r\n\r\n        return (\r\n            <Button  lg warning  popover={popover} id=\"popoverExample\">\r\n               how to play?\r\n            </Button>\r\n        )\r\n    }\r\n}","import React from \"react\"\r\nimport TW from \"./st.module.css\"\r\n\r\nimport Tile from \"./Tile\";\r\nimport {TTile} from \"../../data/TilesReducer\";\r\nimport {TDeleteTile, TGameReset, TResetTiles, TSetClickedTiles} from \"./TilesContainer\";\r\nimport TilesGameOverMenu from \"./TilesGameOverMenu\";\r\nimport GameDescription from \"./GameDescription\";\r\n\r\n\r\ntype TTilesProps = {\r\n    TilesData: Array<TTile>\r\n    ClickedTiles: Array<number>\r\n    SetClickedTiles: TSetClickedTiles\r\n    ResetTiles: TResetTiles\r\n    DeleteTile: TDeleteTile\r\n    GameReset : TGameReset\r\n}\r\ntype TObjsToCompare = Array<{\r\n    id: number\r\n    color: string\r\n}>\r\n\r\nconst Tiles: React.FC<TTilesProps> = (props) => {\r\n\r\n    let ObjsToCompare: TObjsToCompare = []\r\n\r\n    if (props.ClickedTiles.length >= 2) {\r\n        ObjsToCompare.length > 0 && ObjsToCompare.splice(0, ObjsToCompare.length)\r\n        props.ClickedTiles.map(el => {\r\n            props.TilesData.map(tile => {\r\n                tile.id === el && ObjsToCompare.push(tile)\r\n            })\r\n        })\r\n\r\n        if (ObjsToCompare.length > 1 && ObjsToCompare[0].color === ObjsToCompare[1].color) {\r\n\r\n            setTimeout(() => {\r\n                props.DeleteTile(ObjsToCompare[0].id)\r\n                props.DeleteTile(ObjsToCompare[1].id)\r\n            }, 400)\r\n\r\n        } else {\r\n            setTimeout(() => {\r\n                props.ResetTiles()\r\n            }, 500)\r\n        }\r\n\r\n    }\r\n    return <div>\r\n\r\n        {\r\n            props.TilesData.length < 1 ?\r\n                <div>\r\n                    <TilesGameOverMenu GameReset={props.GameReset}/>\r\n                </div>\r\n\r\n                :\r\n                <>\r\n                    <div className={TW.InfoPopper}>\r\n                        <GameDescription/>\r\n                    </div>\r\n\r\n                    <div className={TW.TilesWrapper}>\r\n                        {props.TilesData && props.TilesData.map(tile => <Tile\r\n                            key={tile.id}\r\n                            CurrentColor={tile.color}\r\n                            CurrentID={tile.id}\r\n                            SetClickedTiles={props.SetClickedTiles}\r\n                            ClickedTiles={props.ClickedTiles}\r\n                        />)\r\n                        }\r\n\r\n                    </div>\r\n                </>\r\n        }\r\n\r\n    </div>\r\n\r\n}\r\nexport default Tiles","const SET_CLICKED_TILES = 'TILES/SET_CLICKED_TILES'\r\nconst RESET_TILES = 'TILES/RESET_TILES'\r\nconst DELETE_TILE = 'TILES/DELETE_TILE'\r\nconst GAME_RESET = 'TILES/GAME_RESET'\r\n\r\nexport type TTile = { id: number, color: string }\r\n\r\nlet DefaultState = {\r\n    TilesData: [\r\n        {id: 0, color: \"red\"}, {id: 1, color: \"green\"},\r\n        {id: 2, color: \"green\"}, {id: 3, color: \"red\"},\r\n        {id: 4, color: \"red\"}, {id: 5, color: \"green\"},\r\n        {id: 6, color: \"red\"}, {id: 7, color: \"green\"},\r\n        {id: 8, color: \"red\"}, {id: 9, color: \"green\"},\r\n        {id: 10, color: \"green\"}, {id: 11, color: \"red\"},\r\n        {id: 12, color: \"green\"}, {id: 13, color: \"red\"},\r\n        {id: 14, color: \"red\"}, {id: 15, color: \"green\"}\r\n    ] as Array<TTile>,\r\n    ClickedTiles: [] as Array<number>\r\n}\r\n\r\ntype  DefaultTilesState = typeof DefaultState\r\n\r\n\r\ntype TTilesReducerActions = ReturnType<typeof SetClickedTiles>\r\n    | ReturnType<typeof ResetTiles> | ReturnType<typeof DeleteTile> | ReturnType<typeof GameReset>\r\n\r\nconst TilesReducer = (state = DefaultState, action: TTilesReducerActions): DefaultTilesState => {\r\n\r\n    switch (action.type) {\r\n        case SET_CLICKED_TILES : {\r\n\r\n            return {\r\n                ...state,\r\n                ClickedTiles: action.IsClicked ?\r\n                    [...state.ClickedTiles, action.CurrentTileId]\r\n                    : state.ClickedTiles.filter(id => id !== action.CurrentTileId)\r\n            }\r\n        }\r\n        case RESET_TILES : {\r\n\r\n            return {\r\n                ...state,\r\n                ClickedTiles: []\r\n            }\r\n        }\r\n        case GAME_RESET : {\r\n\r\n            return {\r\n                ...state,\r\n                TilesData: DefaultState.TilesData\r\n            }\r\n        }\r\n        case DELETE_TILE : {\r\n\r\n            return {\r\n                ...state,\r\n                TilesData: state.TilesData.filter(function (tile) {\r\n                    return tile.id !== action.TileID;\r\n                })\r\n            }\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const SetClickedTiles = (CurrentTileId: number, IsClicked: boolean) => {\r\n    return {type: SET_CLICKED_TILES, CurrentTileId, IsClicked} as const\r\n}\r\nexport const ResetTiles = () => ({type: RESET_TILES} as const)\r\n\r\nexport const DeleteTile = (TileID: number) => {\r\n    return {type: DELETE_TILE, TileID} as const\r\n}\r\n\r\nexport const GameReset = () => {\r\n    return {type: GAME_RESET} as const\r\n}\r\n\r\nexport default TilesReducer","import React from 'react'\r\nimport {connect} from \"react-redux\"\r\nimport {GlobalState} from \"../../data/redux-store\"\r\nimport Tiles from \"./TIles\";\r\nimport {DeleteTile,\r\n    GameReset,SetClickedTiles,ResetTiles,TTile\r\n} from \"../../data/TilesReducer\";\r\n\r\ntype T_MSTP_TilesContainer ={\r\n    TilesData : Array<TTile>\r\n    ClickedTiles : Array<number>\r\n}\r\nexport type TSetClickedTiles = typeof SetClickedTiles\r\nexport type TResetTiles = typeof ResetTiles\r\nexport type TDeleteTile = typeof DeleteTile\r\nexport type TGameReset = typeof GameReset\r\n\r\ntype T_MDTP_TilesContainer = {\r\n    SetClickedTiles : TSetClickedTiles\r\n    ResetTiles : TResetTiles\r\n    DeleteTile : TDeleteTile\r\n    GameReset : TGameReset\r\n}\r\n\r\ntype TTilesContainerOwnProps ={\r\n\r\n}\r\n\r\nexport type TTilesContainerProps = T_MSTP_TilesContainer & T_MDTP_TilesContainer & TTilesContainerOwnProps\r\n\r\nclass TilesContainer extends React.Component<TTilesContainerProps> {\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Tiles TilesData={this.props.TilesData}\r\n                   ClickedTiles={this.props.ClickedTiles}\r\n                   SetClickedTiles={this.props.SetClickedTiles}\r\n                   ResetTiles={this.props.ResetTiles}\r\n                   DeleteTile={this.props.DeleteTile}\r\n                   GameReset={this.props.GameReset}\r\n            />\r\n\r\n        )\r\n\r\n    }\r\n}\r\n\r\nlet MapStateToProps = (state : GlobalState) : T_MSTP_TilesContainer  => ({\r\n    TilesData : state.TilesData.TilesData,\r\n    ClickedTiles : state.TilesData.ClickedTiles\r\n})\r\n\r\nexport default connect<T_MSTP_TilesContainer,T_MDTP_TilesContainer,TTilesContainerOwnProps, GlobalState>(MapStateToProps,\r\n    {SetClickedTiles,ResetTiles,DeleteTile,GameReset}) (TilesContainer);\r\n","import React from 'react';\r\n//@ts-ignore\r\nimport  {Carousel} from 'bootstrap-4-react';\r\ntype TSliderCationProps = {\r\n    captionTitle? : string\r\n    caption? : string\r\n    textColor ? : \"primary\" | \"secondary\" | \"success\" | \"danger\" | \"warning\" | \"info\" |\r\n        \"muted\" | \"light\" | \"dark\"\r\n}\r\n\r\nconst SliderCaption : React.FC<TSliderCationProps> = (props) => {\r\n    return(\r\n        <Carousel.Caption shadow=\"none\" display=\"none md-block\"  text={props.textColor}>\r\n            <h3>\r\n                {!props.captionTitle ? \"Stepanenko Vladislav\" : props.captionTitle }\r\n            </h3>\r\n            <p>\r\n                {!props.caption ? \" welcome, here you can find out some information about me as a developer and my interests in life\"\r\n                : props.caption\r\n                }\r\n            </p>\r\n        </Carousel.Caption>\r\n    )\r\n}\r\n\r\nexport default SliderCaption","import React, {Component} from 'react';\r\n//@ts-ignore\r\nimport Bootstrap, {Carousel, BImg, Progress} from 'bootstrap-4-react';\r\nimport Forest1 from \"../../utils/imgs/bg1.jpg\"\r\nimport Forest2 from \"../../utils/imgs/bg2.jpg\"\r\nimport Forest3 from \"../../utils/imgs/bg3.jpg\"\r\nimport Forest4 from \"../../utils/imgs/bg4.jpg\"\r\nimport Forest5 from \"../../utils/imgs/bg5.jpg\"\r\nimport SliderCaption from \"./SliderCaption\";\r\n\r\ntype TSliderProps = {\r\n    SetHPIsLoading: (bool: boolean) => void\r\n    HPIsLoading: boolean\r\n}\r\n\r\nexport default class Slider extends Component<TSliderProps> {\r\n\r\n    componentWillMount() {\r\n        window.setTimeout(() => Bootstrap.carousel('#carouselExampleFade'), 2000);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.SetHPIsLoading(false)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.SetHPIsLoading(true)\r\n    }\r\n\r\n    render() {\r\n        const SliderStyle = {\r\n            height: '93.38vh',\r\n            width: '100%'\r\n        };\r\n        return (\r\n            <>\r\n                {\r\n                    !this.props.HPIsLoading ?\r\n                        <Carousel w=\"100\" id=\"carouselExampleFade\" fade>\r\n                            <Carousel.Inner>\r\n                                <Carousel.Item active>\r\n                                    <BImg style={SliderStyle} display=\"block\" src={Forest2}/>\r\n                                    <SliderCaption textColor=\"light\"/>\r\n                                </Carousel.Item>\r\n                                <Carousel.Item>\r\n                                    <BImg style={SliderStyle} display=\"block\" src={Forest1}/>\r\n                                    <SliderCaption textColor=\"light\"/>\r\n                                </Carousel.Item>\r\n                                <Carousel.Item>\r\n                                    <BImg style={SliderStyle} display=\"block\" src={Forest3}/>\r\n                                    <SliderCaption/>\r\n                                </Carousel.Item>\r\n                                <Carousel.Item>\r\n                                    <BImg style={SliderStyle} display=\"block\" src={Forest4}/>\r\n                                    <SliderCaption/>\r\n                                </Carousel.Item>\r\n                                <Carousel.Item>\r\n                                    <BImg style={SliderStyle} display=\"block\" src={Forest5}/>\r\n                                    <SliderCaption/>\r\n                                </Carousel.Item>\r\n\r\n                            </Carousel.Inner>\r\n                            <Carousel.Prev href=\"#carouselExampleFade\">\r\n                                <Carousel.Prev.Icon/>\r\n                            </Carousel.Prev>\r\n                            <Carousel.Next href=\"#carouselExampleFade\">\r\n                                <Carousel.Next.Icon/>\r\n                            </Carousel.Next>\r\n                        </Carousel>\r\n\r\n                        :\r\n                        <Progress mt=\"4\" mb=\"4\">\r\n                            <Progress.Bar striped animated min=\"0\" max=\"100\" now=\"50\"/>\r\n                        </Progress>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}","\r\nconst SET_HOMEPAGE_IS_LOADING = 'TILES/SET_HOMEPAGE_IS_LOADING'\r\n\r\n\r\nlet DefaultState = {\r\n    HPIsLoading : true\r\n}\r\n\r\ntype  DefaultTilesState = typeof DefaultState\r\n\r\n\r\ntype TTilesReducerActions = ReturnType<typeof SetHPIsLoading>\r\n\r\nconst LoadingReducer = (state = DefaultState, action : TTilesReducerActions): DefaultTilesState => {\r\n\r\n    switch (action.type) {\r\n        case SET_HOMEPAGE_IS_LOADING : {\r\n\r\n            return {\r\n                ...state,\r\n                HPIsLoading : action.HPIsLoading\r\n            }\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const SetHPIsLoading = (HPIsLoading : boolean)  =>{\r\n    return   {type: SET_HOMEPAGE_IS_LOADING, HPIsLoading} as const\r\n}\r\n\r\nexport default LoadingReducer","import React, {useState} from \"react\"\r\nimport Slider from \"../../Slider/Slider\";\r\nimport {SetHPIsLoading} from \"../../../data/LoadingReducer\";\r\nimport {GlobalState} from \"../../../data/redux-store\";\r\nimport {connect} from \"react-redux\"\r\n\r\ntype T_MSTP_HomePageContainer = {\r\n    HPIsLoading: boolean\r\n}\r\n\r\ntype T_MDTP_HomePageContainer = {\r\n    SetHPIsLoading: typeof SetHPIsLoading\r\n}\r\n\r\ntype THomePageContainerOwnProps = {}\r\n\r\nexport type THomePageContainerProps = T_MSTP_HomePageContainer & T_MDTP_HomePageContainer & THomePageContainerOwnProps\r\n\r\nclass HomePageContainer extends React.Component<THomePageContainerProps> {\r\n    render() {\r\n\r\n        return (\r\n            < Slider HPIsLoading={this.props.HPIsLoading}\r\n                     SetHPIsLoading={this.props.SetHPIsLoading}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet MapStateToProps = (state: GlobalState): T_MSTP_HomePageContainer => ({\r\n    HPIsLoading: state.LoadingData.HPIsLoading\r\n})\r\n\r\nexport default connect<T_MSTP_HomePageContainer, T_MDTP_HomePageContainer, THomePageContainerOwnProps, GlobalState>(MapStateToProps,\r\n    {SetHPIsLoading})(HomePageContainer);\r\n","import React from \"react\"\r\nimport {Redirect, Route} from \"react-router-dom\";\r\nimport CS from \"./CS.module.css\"\r\nimport AboutMe from \"./AboutMe/AboutMe\"\r\nimport TilesContainer from \"../Tiles/TilesContainer\";\r\nimport HomePageContainer from \"./Home/HomePageContainer\";\r\n\r\n\r\n\r\nconst Content = () => {\r\n\r\n    return (\r\n        <div className={CS.bgFon}>\r\n            <Route exact path='/'\r\n                   render={() => <Redirect to={\"Home/\"}/>}/>\r\n            <Route path=\"/AboutMe/\" component={AboutMe}/>\r\n            <Route path=\"/Home\"  render = {()=> <HomePageContainer  />}/>\r\n            <Route path=\"/game\" component={TilesContainer}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Content\r\n","import React from 'react';\nimport Header from \"./Components/Header/Header\";\nimport Content from \"./Components/Content/Content\";\n\ntype TAppProps = {}\nconst App: React.FC<TAppProps> = (props) => {\n    return (\n        <>\n            <Header/>\n            <Content/>\n        </>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers, createStore} from \"redux\"\r\nimport TilesReducer from \"./TilesReducer\";\r\nimport LoadingReducer from \"./LoadingReducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    TilesData : TilesReducer,\r\n    LoadingData : LoadingReducer\r\n})\r\n\r\ntype Treducers = typeof reducers\r\n\r\nexport type GlobalState = ReturnType<Treducers>\r\n\r\nconst store = createStore(reducers)\r\n\r\n//@ts-ignore\r\nwindow.store = store\r\nexport default store\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\";\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter,HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./data/redux-store\"\n\nReactDOM.render(\n  <HashRouter basename={process.env.PUBLIC_URL}>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </HashRouter>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/react_logo.7584594f.png\";","module.exports = __webpack_public_path__ + \"static/media/team.060e45a1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/devskills.8c3f5e8d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/contacts.4a62e1e3.png\";","module.exports = __webpack_public_path__ + \"static/media/card_back_side.fabda895.jpg\";","module.exports = __webpack_public_path__ + \"static/media/angular.5e7490aa.png\";","module.exports = __webpack_public_path__ + \"static/media/bg1.4192e4ef.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bg2.3b492c23.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bg3.be2ec03d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bg4.c0b71224.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bg5.40581928.jpg\";"],"sourceRoot":""}